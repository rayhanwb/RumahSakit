/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rumahsakit;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Scanner;
import java.awt.*;
/**
 *
 * @author X230
 */
public class Layanan extends javax.swing.JFrame {
DefaultTableModel tabModel;
ResultSet RsProduk=null;
    /**
     * Creates new form DataPasien
     */
    public Layanan() {
        initComponents();
        showData();
    }

        private void showData(){
        try{
            Object[] judul_kolom = {"id_pasien", "nik", "nama", "alamat", "telepon", "tglahir", "goldar", "gender"};
            tabModel=new DefaultTableModel(null,judul_kolom);
            TabelPasien.setModel(tabModel);
            
            Connection conn=(Connection)koneksi.koneksiDB();
            Statement stt=conn.createStatement();
            tabModel.getDataVector().removeAllElements();
            
            RsProduk=stt.executeQuery("SELECT * from pasien ");  
            while(RsProduk.next()){
                Object[] data={
                    RsProduk.getString("id_pasien"),
                    RsProduk.getString("nik"),
                    RsProduk.getString("nama"),
                    RsProduk.getString("alamat"),
                    RsProduk.getString("telepon"),
                    RsProduk.getString("tglahir"),
                    RsProduk.getString("goldar"), 
                    RsProduk.getString("gender") 
                };
               tabModel.addRow(data);
            }                
        } catch (Exception ex) {
        System.err.println(ex.getMessage());
        }
    }
   
    //show data to form when click data on table
    //menampilkan data ke form saat data pada tabel di klik
    void tableToForm(){
        jTextFieldHarga.setText(tabModel.getValueAt(TabelPasien.getSelectedRow(),1)+"");
        jTextFieldIdP.setText(tabModel.getValueAt(TabelPasien.getSelectedRow(),2)+"");
        jTextFieldIdD.setText(tabModel.getValueAt(TabelPasien.getSelectedRow(),3)+"");
        jTextFieldWaktu.setText(tabModel.getValueAt(TabelPasien.getSelectedRow(),5)+"");
        jTextFieldKeterangan.setText(tabModel.getValueAt(TabelPasien.getSelectedRow(),6)+"");
        jComboBoxJenis.setSelectedItem(tabModel.getValueAt(TabelPasien.getSelectedRow(),7)+"");
        
        buttonUpdate.setEnabled(true);
        buttonDelete.setEnabled(true);
        buttonSave.setEnabled(false);
    }
    
    //clear the form
    //membersihkan isian form 
    private void clearData(){
        
        jTextFieldHarga.setText("");
        jTextFieldIdP.setText(""); 
        jTextFieldIdD.setText("");
        jTextFieldWaktu.setText("");
        jTextFieldKeterangan.setText("");
        jComboBoxJenis.setSelectedIndex(0);
        
    } 
    
    //disable to fill in form
    //tidak membolehkan untuk mengisi form
    private void SetEditOff(){
        jTextFieldHarga.setEnabled(false);
        jTextFieldIdP.setEnabled(false); 
        jTextFieldIdD.setEnabled(false);
        jTextFieldWaktu.setEnabled(false);
        jTextFieldKeterangan.setEnabled(false);
        jComboBoxJenis.setEnabled(false);
    }
    
    //enable to fill in form
    //membolehkan untuk mengisi form
    private void seteditOn(){
        jTextFieldHarga.setEnabled(true);
        jTextFieldIdP.setEnabled(true); 
        jTextFieldIdD.setEnabled(true);
        jTextFieldWaktu.setEnabled(true);
        jTextFieldKeterangan.setEnabled(true);
        jComboBoxJenis.setEnabled(true);
    }
 
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPasien = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIdP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldIdD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldKeterangan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldWaktu = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldHarga = new javax.swing.JTextField();
        buttonNew = new java.awt.Button();
        buttonUpdate = new java.awt.Button();
        buttonDelete = new java.awt.Button();
        buttonSave = new java.awt.Button();
        jComboBoxJenis = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TabelPasien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelPasien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelPasienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelPasien);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 104, 739, 510));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 1, 1));
        jLabel1.setText("Layanan");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 12, -1, -1));

        jTextFieldIdP.setToolTipText("");
        jTextFieldIdP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdPActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldIdP, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 104, 161, -1));

        jLabel2.setForeground(new java.awt.Color(1, 1, 1));
        jLabel2.setText("ID Pasien");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 112, -1, -1));

        jLabel3.setForeground(new java.awt.Color(1, 1, 1));
        jLabel3.setText("ID Dokter");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 164, -1, -1));

        jTextFieldIdD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdDActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldIdD, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 156, 161, -1));

        jLabel5.setForeground(new java.awt.Color(1, 1, 1));
        jLabel5.setText("Keterangan");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 268, -1, -1));

        jTextFieldKeterangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKeteranganActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldKeterangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 260, 161, -1));

        jLabel6.setForeground(new java.awt.Color(1, 1, 1));
        jLabel6.setText("Waktu");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 320, -1, -1));

        jLabel7.setForeground(new java.awt.Color(1, 1, 1));
        jLabel7.setText("Harga");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 372, -1, -1));

        jTextFieldWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWaktuActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldWaktu, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 312, 161, -1));

        jLabel8.setForeground(new java.awt.Color(1, 1, 1));
        jLabel8.setText("Jenis ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 216, -1, -1));

        jTextFieldHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHargaActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 364, 161, -1));

        buttonNew.setLabel("New");
        buttonNew.setName(""); // NOI18N
        buttonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActionPerformed(evt);
            }
        });
        getContentPane().add(buttonNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 465, -1, -1));

        buttonUpdate.setLabel("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 465, -1, -1));

        buttonDelete.setLabel("Delete");
        getContentPane().add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 465, -1, -1));

        buttonSave.setLabel("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(buttonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 465, 57, -1));

        jComboBoxJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kontrol", "Che" }));
        jComboBoxJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxJenisActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxJenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 208, 161, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon("/home/irfannm/NetBeansProjects/RumahSakit/RumahSakit/src/rumahsakit/Logo-PBO-kecil-bgt.png")); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("/home/irfannm/NetBeansProjects/RumahSakit/RumahSakit/src/rumahsakit/Bg-PBO-coab.jpg")); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIdPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdPActionPerformed

    private void jTextFieldIdDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdDActionPerformed

    private void jTextFieldKeteranganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKeteranganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldKeteranganActionPerformed

    private void jTextFieldWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWaktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldWaktuActionPerformed

    private void jTextFieldHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHargaActionPerformed

    //process for making new data
    //proses untuk membuat data data
    private void buttonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActionPerformed
        // TODO add your handling code here:
        clearData();
        buttonSave.setEnabled(true);
        buttonUpdate.setEnabled(false);
        buttonDelete.setEnabled(false);
        seteditOn();
    }//GEN-LAST:event_buttonNewActionPerformed

    //process for deleting data
    //proses untuk menghapus data
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        String nama=jTextFieldIdP.getText();

        if (nama.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Kode produk tidak boleh kosong");
            jTextFieldIdP.requestFocus();
        }else if(JOptionPane.showConfirmDialog(null,"Apakah anda yakin akan menghapus data ini?",
            "Informasi",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE)==JOptionPane.OK_OPTION){
        try{
            Connection conn=(Connection)koneksi.koneksiDB();
            Statement stt=conn.createStatement();
            stt.executeUpdate("DELETE FROM pasien WHERE nama='"+nama+"'");
            clearData();
            showData();
            SetEditOff();
            JOptionPane.showMessageDialog(this,"Data berhasil di hapus","Success",JOptionPane.INFORMATION_MESSAGE);
        } catch(SQLException e){
            JOptionPane.showMessageDialog(this,"Delete data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
        }
    }
    
    //process for updating data
    //proses untuk memperbaharui data
    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        String nama=jTextFieldIdP.getText();
        String jk=jComboBoxJenis.getSelectedItem().toString();
        String nik=jTextFieldHarga.getText();
        String alamat=jTextFieldIdD.getText();
      
        String tl=jTextFieldWaktu.getText();
        String darah=jTextFieldKeterangan.getText();        
        
        if (nama.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Nama tidak boleh dikosongkan!");
            jTextFieldIdP.requestFocus();
        }else if (nik.isEmpty()) {
            JOptionPane.showMessageDialog(null,"NIK tidak boleh dikosongkan!");
            jTextFieldHarga.requestFocus();
        }else if (alamat.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Alamat tidak boleh dikosongkan!");
            jTextFieldIdD.requestFocus();
        }else if (tl.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Tanggal lahir tidak boleh dikosongkan!");
            jTextFieldWaktu.requestFocus();
        }else if (darah.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Darah tidak boleh dikosongkan!");
            jTextFieldKeterangan.requestFocus();
        }else{
            try{
                Connection conn=(Connection)koneksi.koneksiDB();
                Statement stt=conn.createStatement();
                stt.executeUpdate("UPDATE pasien SET nik='"+nik+"', nama='"+nama+"' , alamat='"+alamat+"', tglahir='"+tl+"', goldar='"+darah+"', gender='"+jk+"' WHERE nama='"+nama+"'");
                clearData();
                showData();
                SetEditOff();
                JOptionPane.showMessageDialog(this,"Data berhasil disimpan","Success",JOptionPane.INFORMATION_MESSAGE);
            } catch(SQLException e){
                JOptionPane.showMessageDialog(this,"Simpan data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void jComboBoxJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxJenisActionPerformed
   
    //process for saving data
    //proses untuk menyimpan data
    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        String nama=jTextFieldIdP.getText();
        String jk=jComboBoxJenis.getSelectedItem().toString();
        String nik=jTextFieldHarga.getText();
        String alamat=jTextFieldIdD.getText();
        String tl=jTextFieldWaktu.getText();
        String darah=jTextFieldKeterangan.getText();        
        
        if (nama.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Nama tidak boleh dikosongkan!");
            jTextFieldIdP.requestFocus();
        }else if (nik.isEmpty()) {
            JOptionPane.showMessageDialog(null,"NIK tidak boleh dikosongkan!");
            jTextFieldHarga.requestFocus();
        }else if (alamat.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Alamat tidak boleh dikosongkan!");
            jTextFieldIdD.requestFocus();
        }else if (tl.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Tanggal lahir tidak boleh dikosongkan!");
            jTextFieldWaktu.requestFocus();
        }else if (darah.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Darah tidak boleh dikosongkan!");
            jTextFieldKeterangan.requestFocus();
        }else{
            try{
                Connection conn=(Connection)koneksi.koneksiDB();
                Statement stt=conn.createStatement();
                stt.executeUpdate("INSERT INTO pasien(nik, nama, alamat, telepon, tglahir, goldar, gender)"+
                    "VALUES('"+nik+"','"+nama+"','"+alamat+"','"+tl+"','"+darah+"','"+jk+"')");
                clearData();
                showData();
                SetEditOff();
                JOptionPane.showMessageDialog(this,"Data berhasil disimpan","Success",JOptionPane.INFORMATION_MESSAGE);
            } catch(SQLException e){
                JOptionPane.showMessageDialog(this,"Simpan data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    //handling process when click data on pasien table
    //menangani proses saat tabel pasien di klik
    private void TabelPasienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelPasienMouseClicked
        // TODO add your handling code here:
        seteditOn();
        tableToForm();
    }//GEN-LAST:event_TabelPasienMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Layanan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelPasien;
    private java.awt.Button buttonDelete;
    private java.awt.Button buttonNew;
    private java.awt.Button buttonSave;
    private java.awt.Button buttonUpdate;
    private javax.swing.JComboBox<String> jComboBoxJenis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldHarga;
    private javax.swing.JTextField jTextFieldIdD;
    private javax.swing.JTextField jTextFieldIdP;
    private javax.swing.JTextField jTextFieldKeterangan;
    private javax.swing.JTextField jTextFieldWaktu;
    // End of variables declaration//GEN-END:variables
}
